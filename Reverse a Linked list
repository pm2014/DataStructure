/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head==null){
            return head;
        }
        ListNode prev = null;
        ListNode temp = null;
        ListNode curr = head;

        while(curr!=null){
            System.out.println(curr.val);

            temp = curr.next ;
            curr.next = prev;
            prev = curr;
            curr= temp; //curr = curr.next -> to move forward in loop
        }
        return prev; // returning prev as curr will be null in the end of while loop and then only break from the loop
    }
}
